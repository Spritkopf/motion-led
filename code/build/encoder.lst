ARM GAS  /tmp/ccOiD4KL.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"encoder.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.encoder_get_direction,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	encoder_get_direction:
  23              	.LFB68:
  24              		.file 1 "Src/encoder.c"
   1:Src/encoder.c **** /*
   2:Src/encoder.c ****  * encoder.c
   3:Src/encoder.c ****  *
   4:Src/encoder.c ****  *  Created on: 13.03.2016
   5:Src/encoder.c ****  *      Author: Spritkopf
   6:Src/encoder.c ****  */
   7:Src/encoder.c **** 
   8:Src/encoder.c **** #include "stm32l1xx_hal.h"
   9:Src/encoder.c **** #include "encoder.h"
  10:Src/encoder.c **** 
  11:Src/encoder.c **** #define CH_A_HIGH	HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_11)==GPIO_PIN_SET
  12:Src/encoder.c **** #define CH_A_LOW	HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_11)==GPIO_PIN_RESET
  13:Src/encoder.c **** #define CH_B_HIGH	HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8)==GPIO_PIN_SET
  14:Src/encoder.c **** #define CH_B_LOW	HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8)==GPIO_PIN_RESET
  15:Src/encoder.c **** #define THRESHOLD	300
  16:Src/encoder.c **** 
  17:Src/encoder.c **** #define ENCODER_PIN_A	 GPIO_PIN_6
  18:Src/encoder.c **** #define ENCODER_PIN_B	 GPIO_PIN_7
  19:Src/encoder.c **** #define ENCODER_PORT	 GPIOB
  20:Src/encoder.c **** #define ENCODER_BTN_PIN	 GPIO_PIN_2
  21:Src/encoder.c **** #define ENCODER_BTN_PORT GPIOA
  22:Src/encoder.c **** 
  23:Src/encoder.c **** 
  24:Src/encoder.c **** /* Timer handler declaration */
  25:Src/encoder.c **** TIM_HandleTypeDef    encoder_handle;
  26:Src/encoder.c **** 
  27:Src/encoder.c **** 
  28:Src/encoder.c **** static uint32_t encoder_get_direction();
  29:Src/encoder.c **** 
  30:Src/encoder.c **** /* function pointer for callback functions */
  31:Src/encoder.c **** void (*encoder_rotation_callback)(uint8_t direction);
  32:Src/encoder.c **** void (*encoder_button_callback)(void);
  33:Src/encoder.c **** 
  34:Src/encoder.c **** 
ARM GAS  /tmp/ccOiD4KL.s 			page 2


  35:Src/encoder.c **** void TIM4_IRQHandler(void)
  36:Src/encoder.c **** {
  37:Src/encoder.c **** 	uint8_t temp_direction;
  38:Src/encoder.c **** 
  39:Src/encoder.c **** 	HAL_TIM_IRQHandler(&encoder_handle);
  40:Src/encoder.c **** 
  41:Src/encoder.c **** 	temp_direction = encoder_get_direction();
  42:Src/encoder.c **** 	encoder_rotation_callback(temp_direction);
  43:Src/encoder.c **** 
  44:Src/encoder.c **** 	/* Wait a short delay before clearing Interrupt flags to avoid
  45:Src/encoder.c **** 	 * immediately following interrupts due to bouncing issues
  46:Src/encoder.c **** 	 *  todo: remove this, we have hardware debouncing */
  47:Src/encoder.c **** 	//delay = 0xfff0;
  48:Src/encoder.c **** 	//while(delay--);
  49:Src/encoder.c **** 
  50:Src/encoder.c **** }
  51:Src/encoder.c **** 
  52:Src/encoder.c **** 
  53:Src/encoder.c **** 
  54:Src/encoder.c **** void encoder_init()
  55:Src/encoder.c **** {
  56:Src/encoder.c **** 	GPIO_InitTypeDef   gpio;
  57:Src/encoder.c **** 	TIM_Encoder_InitTypeDef encoder_config;
  58:Src/encoder.c **** 
  59:Src/encoder.c **** 	/* Encoder Pins
  60:Src/encoder.c **** 	 *
  61:Src/encoder.c **** 	 * A: PA8
  62:Src/encoder.c **** 	 * B: PE11
  63:Src/encoder.c **** 	 * Button: PA6
  64:Src/encoder.c **** 	 */
  65:Src/encoder.c **** 
  66:Src/encoder.c **** 
  67:Src/encoder.c **** 	/* Enable GPIO Channels Clock */
  68:Src/encoder.c **** 	__HAL_RCC_GPIOA_CLK_ENABLE();
  69:Src/encoder.c **** 	__HAL_RCC_GPIOB_CLK_ENABLE();
  70:Src/encoder.c **** 	__HAL_RCC_TIM4_CLK_ENABLE();
  71:Src/encoder.c **** 
  72:Src/encoder.c **** 	HAL_NVIC_SetPriority(TIM4_IRQn, 0, 1);
  73:Src/encoder.c **** 	HAL_NVIC_EnableIRQ(TIM4_IRQn);
  74:Src/encoder.c **** 
  75:Src/encoder.c **** 
  76:Src/encoder.c **** 	/*##-2- Configure I/Os #####################################################*/
  77:Src/encoder.c **** 	/* Common configuration for all channels */
  78:Src/encoder.c **** 	gpio.Pin = ENCODER_PIN_A | ENCODER_PIN_B;
  79:Src/encoder.c **** 	gpio.Mode = GPIO_MODE_AF_PP;
  80:Src/encoder.c **** 	gpio.Pull = GPIO_NOPULL;
  81:Src/encoder.c **** 	gpio.Speed = GPIO_SPEED_HIGH;
  82:Src/encoder.c **** 	gpio.Alternate = GPIO_AF2_TIM4;
  83:Src/encoder.c **** 
  84:Src/encoder.c **** 	/* Channel 2 configuration */
  85:Src/encoder.c **** 	HAL_GPIO_Init(ENCODER_PORT, &gpio);
  86:Src/encoder.c **** 
  87:Src/encoder.c **** 	/* Push Button Initialization */
  88:Src/encoder.c **** 	gpio.Pin = ENCODER_BTN_PIN;
  89:Src/encoder.c **** 	gpio.Mode = GPIO_MODE_IT_FALLING;
  90:Src/encoder.c **** 	gpio.Pull = GPIO_PULLUP;
  91:Src/encoder.c **** 	gpio.Speed = GPIO_SPEED_HIGH;
ARM GAS  /tmp/ccOiD4KL.s 			page 3


  92:Src/encoder.c **** 	HAL_GPIO_Init(ENCODER_BTN_PORT, &gpio);
  93:Src/encoder.c **** 
  94:Src/encoder.c **** 	HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 2);
  95:Src/encoder.c **** 	HAL_NVIC_EnableIRQ(EXTI2_IRQn);
  96:Src/encoder.c **** 
  97:Src/encoder.c **** 	encoder_handle.Instance = TIM4;
  98:Src/encoder.c **** 	encoder_handle.Init.Period = 0xFFFF;
  99:Src/encoder.c **** 	encoder_handle.Init.Prescaler = 0;
 100:Src/encoder.c **** 	encoder_handle.Init.ClockDivision = 0;
 101:Src/encoder.c **** 	encoder_handle.Init.CounterMode = TIM_COUNTERMODE_UP;
 102:Src/encoder.c **** 
 103:Src/encoder.c **** 	encoder_config.EncoderMode = TIM_ENCODERMODE_TI2;
 104:Src/encoder.c **** 	encoder_config.IC1Polarity = TIM_ICPOLARITY_FALLING;
 105:Src/encoder.c **** 	encoder_config.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 106:Src/encoder.c **** 	encoder_config.IC1Prescaler = TIM_ICPSC_DIV1;
 107:Src/encoder.c **** 	encoder_config.IC1Filter = 0x0F;
 108:Src/encoder.c **** 
 109:Src/encoder.c **** 	encoder_config.IC2Polarity = TIM_ICPOLARITY_BOTHEDGE;
 110:Src/encoder.c **** 	encoder_config.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 111:Src/encoder.c **** 	encoder_config.IC2Prescaler = TIM_ICPSC_DIV1;
 112:Src/encoder.c **** 	encoder_config.IC2Filter = 0x0F;
 113:Src/encoder.c **** 
 114:Src/encoder.c **** 	HAL_TIM_Encoder_Init(&encoder_handle, &encoder_config);
 115:Src/encoder.c **** 
 116:Src/encoder.c **** 
 117:Src/encoder.c **** 
 118:Src/encoder.c **** 
 119:Src/encoder.c **** }
 120:Src/encoder.c **** 
 121:Src/encoder.c **** void encoder_start(void)
 122:Src/encoder.c **** {
 123:Src/encoder.c **** 	/* Start the encoder interface */
 124:Src/encoder.c **** 	HAL_TIM_Encoder_Start_IT(&encoder_handle, TIM_CHANNEL_1);
 125:Src/encoder.c **** }
 126:Src/encoder.c **** 
 127:Src/encoder.c **** void encoder_stop(void)
 128:Src/encoder.c **** {
 129:Src/encoder.c **** 	HAL_TIM_Encoder_Stop_IT(&encoder_handle, TIM_CHANNEL_1);
 130:Src/encoder.c **** }
 131:Src/encoder.c **** 
 132:Src/encoder.c **** uint32_t encoder_get_direction(void)
 133:Src/encoder.c **** {
  25              		.loc 1 133 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
 134:Src/encoder.c **** 	return (__HAL_TIM_IS_TIM_COUNTING_DOWN(&encoder_handle));
  30              		.loc 1 134 0
  31 0000 024B     		ldr	r3, .L2
  32 0002 1B68     		ldr	r3, [r3]
  33 0004 1868     		ldr	r0, [r3]
 135:Src/encoder.c **** }
  34              		.loc 1 135 0
  35 0006 C0F30010 		ubfx	r0, r0, #4, #1
  36 000a 7047     		bx	lr
  37              	.L3:
ARM GAS  /tmp/ccOiD4KL.s 			page 4


  38              		.align	2
  39              	.L2:
  40 000c 00000000 		.word	encoder_handle
  41              		.cfi_endproc
  42              	.LFE68:
  44              		.section	.text.TIM4_IRQHandler,"ax",%progbits
  45              		.align	1
  46              		.global	TIM4_IRQHandler
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu softvfp
  52              	TIM4_IRQHandler:
  53              	.LFB64:
  36:Src/encoder.c **** 	uint8_t temp_direction;
  54              		.loc 1 36 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58 0000 08B5     		push	{r3, lr}
  59              	.LCFI0:
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 3, -8
  62              		.cfi_offset 14, -4
  39:Src/encoder.c **** 
  63              		.loc 1 39 0
  64 0002 0548     		ldr	r0, .L6
  65 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
  66              	.LVL0:
  41:Src/encoder.c **** 	encoder_rotation_callback(temp_direction);
  67              		.loc 1 41 0
  68 0008 FFF7FEFF 		bl	encoder_get_direction
  69              	.LVL1:
  42:Src/encoder.c **** 
  70              		.loc 1 42 0
  71 000c 034B     		ldr	r3, .L6+4
  72 000e 1B68     		ldr	r3, [r3]
  73 0010 C0B2     		uxtb	r0, r0
  74 0012 9847     		blx	r3
  75              	.LVL2:
  76 0014 08BD     		pop	{r3, pc}
  77              	.L7:
  78 0016 00BF     		.align	2
  79              	.L6:
  80 0018 00000000 		.word	encoder_handle
  81 001c 00000000 		.word	encoder_rotation_callback
  82              		.cfi_endproc
  83              	.LFE64:
  85              		.section	.text.encoder_init,"ax",%progbits
  86              		.align	1
  87              		.global	encoder_init
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu softvfp
  93              	encoder_init:
  94              	.LFB65:
ARM GAS  /tmp/ccOiD4KL.s 			page 5


  55:Src/encoder.c **** 	GPIO_InitTypeDef   gpio;
  95              		.loc 1 55 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 72
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 20
 102              		.cfi_offset 4, -20
 103              		.cfi_offset 5, -16
 104              		.cfi_offset 6, -12
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 93B0     		sub	sp, sp, #76
 108              	.LCFI2:
 109              		.cfi_def_cfa_offset 96
 110              	.LBB2:
  68:Src/encoder.c **** 	__HAL_RCC_GPIOB_CLK_ENABLE();
 111              		.loc 1 68 0
 112 0004 2E4B     		ldr	r3, .L10
 113 0006 DA69     		ldr	r2, [r3, #28]
 114 0008 42F00102 		orr	r2, r2, #1
 115 000c DA61     		str	r2, [r3, #28]
 116 000e DA69     		ldr	r2, [r3, #28]
 117 0010 02F00102 		and	r2, r2, #1
 118 0014 0192     		str	r2, [sp, #4]
 119 0016 019A     		ldr	r2, [sp, #4]
 120              	.LBE2:
 121              	.LBB3:
  69:Src/encoder.c **** 	__HAL_RCC_TIM4_CLK_ENABLE();
 122              		.loc 1 69 0
 123 0018 DA69     		ldr	r2, [r3, #28]
 124 001a 42F00202 		orr	r2, r2, #2
 125 001e DA61     		str	r2, [r3, #28]
 126 0020 DA69     		ldr	r2, [r3, #28]
 127 0022 02F00202 		and	r2, r2, #2
 128 0026 0292     		str	r2, [sp, #8]
 129 0028 029A     		ldr	r2, [sp, #8]
 130              	.LBE3:
 131              	.LBB4:
  70:Src/encoder.c **** 
 132              		.loc 1 70 0
 133 002a 5A6A     		ldr	r2, [r3, #36]
 134 002c 42F00402 		orr	r2, r2, #4
 135 0030 5A62     		str	r2, [r3, #36]
 136 0032 5B6A     		ldr	r3, [r3, #36]
 137 0034 03F00403 		and	r3, r3, #4
 138 0038 0393     		str	r3, [sp, #12]
 139 003a 039B     		ldr	r3, [sp, #12]
 140              	.LBE4:
  72:Src/encoder.c **** 	HAL_NVIC_EnableIRQ(TIM4_IRQn);
 141              		.loc 1 72 0
 142 003c 0122     		movs	r2, #1
 143 003e 0021     		movs	r1, #0
 144 0040 1E20     		movs	r0, #30
 145 0042 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 146              	.LVL3:
ARM GAS  /tmp/ccOiD4KL.s 			page 6


  73:Src/encoder.c **** 
 147              		.loc 1 73 0
 148 0046 1E20     		movs	r0, #30
 149 0048 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 150              	.LVL4:
  78:Src/encoder.c **** 	gpio.Mode = GPIO_MODE_AF_PP;
 151              		.loc 1 78 0
 152 004c C023     		movs	r3, #192
 153 004e 0D93     		str	r3, [sp, #52]
  79:Src/encoder.c **** 	gpio.Pull = GPIO_NOPULL;
 154              		.loc 1 79 0
 155 0050 0225     		movs	r5, #2
 156 0052 0E95     		str	r5, [sp, #56]
  80:Src/encoder.c **** 	gpio.Speed = GPIO_SPEED_HIGH;
 157              		.loc 1 80 0
 158 0054 0024     		movs	r4, #0
 159 0056 0F94     		str	r4, [sp, #60]
  81:Src/encoder.c **** 	gpio.Alternate = GPIO_AF2_TIM4;
 160              		.loc 1 81 0
 161 0058 0327     		movs	r7, #3
 162 005a 1097     		str	r7, [sp, #64]
  82:Src/encoder.c **** 
 163              		.loc 1 82 0
 164 005c 1195     		str	r5, [sp, #68]
  85:Src/encoder.c **** 
 165              		.loc 1 85 0
 166 005e 0DA9     		add	r1, sp, #52
 167 0060 1848     		ldr	r0, .L10+4
 168 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 169              	.LVL5:
  88:Src/encoder.c **** 	gpio.Mode = GPIO_MODE_IT_FALLING;
 170              		.loc 1 88 0
 171 0066 0423     		movs	r3, #4
 172 0068 0D93     		str	r3, [sp, #52]
  89:Src/encoder.c **** 	gpio.Pull = GPIO_PULLUP;
 173              		.loc 1 89 0
 174 006a 174B     		ldr	r3, .L10+8
 175 006c 0E93     		str	r3, [sp, #56]
  90:Src/encoder.c **** 	gpio.Speed = GPIO_SPEED_HIGH;
 176              		.loc 1 90 0
 177 006e 0126     		movs	r6, #1
 178 0070 0F96     		str	r6, [sp, #60]
  91:Src/encoder.c **** 	HAL_GPIO_Init(ENCODER_BTN_PORT, &gpio);
 179              		.loc 1 91 0
 180 0072 1097     		str	r7, [sp, #64]
  92:Src/encoder.c **** 
 181              		.loc 1 92 0
 182 0074 0DA9     		add	r1, sp, #52
 183 0076 1548     		ldr	r0, .L10+12
 184 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 185              	.LVL6:
  94:Src/encoder.c **** 	HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 186              		.loc 1 94 0
 187 007c 2A46     		mov	r2, r5
 188 007e 2146     		mov	r1, r4
 189 0080 0820     		movs	r0, #8
 190 0082 FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccOiD4KL.s 			page 7


 191              	.LVL7:
  95:Src/encoder.c **** 
 192              		.loc 1 95 0
 193 0086 0820     		movs	r0, #8
 194 0088 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 195              	.LVL8:
  97:Src/encoder.c **** 	encoder_handle.Init.Period = 0xFFFF;
 196              		.loc 1 97 0
 197 008c 1048     		ldr	r0, .L10+16
 198 008e 114B     		ldr	r3, .L10+20
 199 0090 0360     		str	r3, [r0]
  98:Src/encoder.c **** 	encoder_handle.Init.Prescaler = 0;
 200              		.loc 1 98 0
 201 0092 4FF6FF73 		movw	r3, #65535
 202 0096 C360     		str	r3, [r0, #12]
  99:Src/encoder.c **** 	encoder_handle.Init.ClockDivision = 0;
 203              		.loc 1 99 0
 204 0098 4460     		str	r4, [r0, #4]
 100:Src/encoder.c **** 	encoder_handle.Init.CounterMode = TIM_COUNTERMODE_UP;
 205              		.loc 1 100 0
 206 009a 0461     		str	r4, [r0, #16]
 101:Src/encoder.c **** 
 207              		.loc 1 101 0
 208 009c 8460     		str	r4, [r0, #8]
 103:Src/encoder.c **** 	encoder_config.IC1Polarity = TIM_ICPOLARITY_FALLING;
 209              		.loc 1 103 0
 210 009e 0495     		str	r5, [sp, #16]
 104:Src/encoder.c **** 	encoder_config.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 211              		.loc 1 104 0
 212 00a0 0595     		str	r5, [sp, #20]
 105:Src/encoder.c **** 	encoder_config.IC1Prescaler = TIM_ICPSC_DIV1;
 213              		.loc 1 105 0
 214 00a2 0696     		str	r6, [sp, #24]
 106:Src/encoder.c **** 	encoder_config.IC1Filter = 0x0F;
 215              		.loc 1 106 0
 216 00a4 0794     		str	r4, [sp, #28]
 107:Src/encoder.c **** 
 217              		.loc 1 107 0
 218 00a6 0F23     		movs	r3, #15
 219 00a8 0893     		str	r3, [sp, #32]
 109:Src/encoder.c **** 	encoder_config.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 220              		.loc 1 109 0
 221 00aa 0A22     		movs	r2, #10
 222 00ac 0992     		str	r2, [sp, #36]
 110:Src/encoder.c **** 	encoder_config.IC2Prescaler = TIM_ICPSC_DIV1;
 223              		.loc 1 110 0
 224 00ae 0A96     		str	r6, [sp, #40]
 111:Src/encoder.c **** 	encoder_config.IC2Filter = 0x0F;
 225              		.loc 1 111 0
 226 00b0 0B94     		str	r4, [sp, #44]
 112:Src/encoder.c **** 
 227              		.loc 1 112 0
 228 00b2 0C93     		str	r3, [sp, #48]
 114:Src/encoder.c **** 
 229              		.loc 1 114 0
 230 00b4 04A9     		add	r1, sp, #16
 231 00b6 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
ARM GAS  /tmp/ccOiD4KL.s 			page 8


 232              	.LVL9:
 119:Src/encoder.c **** 
 233              		.loc 1 119 0
 234 00ba 13B0     		add	sp, sp, #76
 235              	.LCFI3:
 236              		.cfi_def_cfa_offset 20
 237              		@ sp needed
 238 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 239              	.L11:
 240 00be 00BF     		.align	2
 241              	.L10:
 242 00c0 00380240 		.word	1073887232
 243 00c4 00040240 		.word	1073873920
 244 00c8 00002110 		.word	270598144
 245 00cc 00000240 		.word	1073872896
 246 00d0 00000000 		.word	encoder_handle
 247 00d4 00080040 		.word	1073743872
 248              		.cfi_endproc
 249              	.LFE65:
 251              		.section	.text.encoder_start,"ax",%progbits
 252              		.align	1
 253              		.global	encoder_start
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu softvfp
 259              	encoder_start:
 260              	.LFB66:
 122:Src/encoder.c **** 	/* Start the encoder interface */
 261              		.loc 1 122 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 08B5     		push	{r3, lr}
 266              	.LCFI4:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 3, -8
 269              		.cfi_offset 14, -4
 124:Src/encoder.c **** }
 270              		.loc 1 124 0
 271 0002 0021     		movs	r1, #0
 272 0004 0148     		ldr	r0, .L14
 273 0006 FFF7FEFF 		bl	HAL_TIM_Encoder_Start_IT
 274              	.LVL10:
 275 000a 08BD     		pop	{r3, pc}
 276              	.L15:
 277              		.align	2
 278              	.L14:
 279 000c 00000000 		.word	encoder_handle
 280              		.cfi_endproc
 281              	.LFE66:
 283              		.section	.text.encoder_stop,"ax",%progbits
 284              		.align	1
 285              		.global	encoder_stop
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
ARM GAS  /tmp/ccOiD4KL.s 			page 9


 289              		.fpu softvfp
 291              	encoder_stop:
 292              	.LFB67:
 128:Src/encoder.c **** 	HAL_TIM_Encoder_Stop_IT(&encoder_handle, TIM_CHANNEL_1);
 293              		.loc 1 128 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297 0000 08B5     		push	{r3, lr}
 298              	.LCFI5:
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 3, -8
 301              		.cfi_offset 14, -4
 129:Src/encoder.c **** }
 302              		.loc 1 129 0
 303 0002 0021     		movs	r1, #0
 304 0004 0148     		ldr	r0, .L18
 305 0006 FFF7FEFF 		bl	HAL_TIM_Encoder_Stop_IT
 306              	.LVL11:
 307 000a 08BD     		pop	{r3, pc}
 308              	.L19:
 309              		.align	2
 310              	.L18:
 311 000c 00000000 		.word	encoder_handle
 312              		.cfi_endproc
 313              	.LFE67:
 315              		.section	.text.encoder_set_rotation_callback,"ax",%progbits
 316              		.align	1
 317              		.global	encoder_set_rotation_callback
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu softvfp
 323              	encoder_set_rotation_callback:
 324              	.LFB69:
 136:Src/encoder.c **** 
 137:Src/encoder.c **** void encoder_set_rotation_callback(void (*user_callback)(uint8_t direction))
 138:Src/encoder.c **** {
 325              		.loc 1 138 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 330              	.LVL12:
 139:Src/encoder.c **** 	encoder_rotation_callback = user_callback;
 331              		.loc 1 139 0
 332 0000 014B     		ldr	r3, .L21
 333 0002 1860     		str	r0, [r3]
 334 0004 7047     		bx	lr
 335              	.L22:
 336 0006 00BF     		.align	2
 337              	.L21:
 338 0008 00000000 		.word	encoder_rotation_callback
 339              		.cfi_endproc
 340              	.LFE69:
 342              		.section	.text.encoder_set_button_callback,"ax",%progbits
 343              		.align	1
ARM GAS  /tmp/ccOiD4KL.s 			page 10


 344              		.global	encoder_set_button_callback
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 348              		.fpu softvfp
 350              	encoder_set_button_callback:
 351              	.LFB70:
 140:Src/encoder.c **** }
 141:Src/encoder.c **** 
 142:Src/encoder.c **** void encoder_set_button_callback(void (*user_callback)(void))
 143:Src/encoder.c **** {
 352              		.loc 1 143 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 357              	.LVL13:
 144:Src/encoder.c **** 	encoder_button_callback = user_callback;
 358              		.loc 1 144 0
 359 0000 014B     		ldr	r3, .L24
 360 0002 1860     		str	r0, [r3]
 361 0004 7047     		bx	lr
 362              	.L25:
 363 0006 00BF     		.align	2
 364              	.L24:
 365 0008 00000000 		.word	encoder_button_callback
 366              		.cfi_endproc
 367              	.LFE70:
 369              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 370              		.align	1
 371              		.global	HAL_GPIO_EXTI_Callback
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu softvfp
 377              	HAL_GPIO_EXTI_Callback:
 378              	.LFB71:
 145:Src/encoder.c **** 
 146:Src/encoder.c **** }
 147:Src/encoder.c **** 
 148:Src/encoder.c **** /* Interrupt callback for encoder button */
 149:Src/encoder.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 150:Src/encoder.c **** {
 379              		.loc 1 150 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              	.LVL14:
 151:Src/encoder.c **** 	if((GPIO_Pin == ENCODER_BTN_PIN) && (encoder_button_callback != NULL))
 384              		.loc 1 151 0
 385 0000 0428     		cmp	r0, #4
 386 0002 00D0     		beq	.L32
 387 0004 7047     		bx	lr
 388              	.L32:
 150:Src/encoder.c **** 	if((GPIO_Pin == ENCODER_BTN_PIN) && (encoder_button_callback != NULL))
 389              		.loc 1 150 0 discriminator 1
 390 0006 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccOiD4KL.s 			page 11


 391              	.LCFI6:
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 3, -8
 394              		.cfi_offset 14, -4
 395              		.loc 1 151 0 discriminator 1
 396 0008 024B     		ldr	r3, .L33
 397 000a 1B68     		ldr	r3, [r3]
 398 000c 03B1     		cbz	r3, .L26
 152:Src/encoder.c **** 	{
 153:Src/encoder.c **** 		encoder_button_callback();
 399              		.loc 1 153 0
 400 000e 9847     		blx	r3
 401              	.LVL15:
 402              	.L26:
 403 0010 08BD     		pop	{r3, pc}
 404              	.L34:
 405 0012 00BF     		.align	2
 406              	.L33:
 407 0014 00000000 		.word	encoder_button_callback
 408              		.cfi_endproc
 409              	.LFE71:
 411              		.comm	encoder_button_callback,4,4
 412              		.comm	encoder_rotation_callback,4,4
 413              		.comm	encoder_handle,56,4
 414              		.text
 415              	.Letext0:
 416              		.file 2 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/machine/_defau
 417              		.file 3 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_stdint.h"
 418              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 419              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/system_stm32l1xx.h"
 420              		.file 6 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l151xb.h"
 421              		.file 7 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/lock.h"
 422              		.file 8 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_types.h"
 423              		.file 9 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/lib/gcc/arm-none-eabi/6.3.1/include/
 424              		.file 10 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/reent.h"
 425              		.file 11 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 426              		.file 12 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_gpio.h"
 427              		.file 13 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_dma.h"
 428              		.file 14 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_tim.h"
 429              		.file 15 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_cortex.h"
ARM GAS  /tmp/ccOiD4KL.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 encoder.c
     /tmp/ccOiD4KL.s:16     .text.encoder_get_direction:0000000000000000 $t
     /tmp/ccOiD4KL.s:22     .text.encoder_get_direction:0000000000000000 encoder_get_direction
     /tmp/ccOiD4KL.s:40     .text.encoder_get_direction:000000000000000c $d
                            *COM*:0000000000000038 encoder_handle
     /tmp/ccOiD4KL.s:45     .text.TIM4_IRQHandler:0000000000000000 $t
     /tmp/ccOiD4KL.s:52     .text.TIM4_IRQHandler:0000000000000000 TIM4_IRQHandler
     /tmp/ccOiD4KL.s:80     .text.TIM4_IRQHandler:0000000000000018 $d
                            *COM*:0000000000000004 encoder_rotation_callback
     /tmp/ccOiD4KL.s:86     .text.encoder_init:0000000000000000 $t
     /tmp/ccOiD4KL.s:93     .text.encoder_init:0000000000000000 encoder_init
     /tmp/ccOiD4KL.s:242    .text.encoder_init:00000000000000c0 $d
     /tmp/ccOiD4KL.s:252    .text.encoder_start:0000000000000000 $t
     /tmp/ccOiD4KL.s:259    .text.encoder_start:0000000000000000 encoder_start
     /tmp/ccOiD4KL.s:279    .text.encoder_start:000000000000000c $d
     /tmp/ccOiD4KL.s:284    .text.encoder_stop:0000000000000000 $t
     /tmp/ccOiD4KL.s:291    .text.encoder_stop:0000000000000000 encoder_stop
     /tmp/ccOiD4KL.s:311    .text.encoder_stop:000000000000000c $d
     /tmp/ccOiD4KL.s:316    .text.encoder_set_rotation_callback:0000000000000000 $t
     /tmp/ccOiD4KL.s:323    .text.encoder_set_rotation_callback:0000000000000000 encoder_set_rotation_callback
     /tmp/ccOiD4KL.s:338    .text.encoder_set_rotation_callback:0000000000000008 $d
     /tmp/ccOiD4KL.s:343    .text.encoder_set_button_callback:0000000000000000 $t
     /tmp/ccOiD4KL.s:350    .text.encoder_set_button_callback:0000000000000000 encoder_set_button_callback
     /tmp/ccOiD4KL.s:365    .text.encoder_set_button_callback:0000000000000008 $d
                            *COM*:0000000000000004 encoder_button_callback
     /tmp/ccOiD4KL.s:370    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccOiD4KL.s:377    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/ccOiD4KL.s:407    .text.HAL_GPIO_EXTI_Callback:0000000000000014 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_IRQHandler
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
HAL_TIM_Encoder_Init
HAL_TIM_Encoder_Start_IT
HAL_TIM_Encoder_Stop_IT
