ARM GAS  /tmp/ccAVLa3j.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"encoder.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.encoder_get_direction,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	encoder_get_direction:
  23              	.LFB68:
  24              		.file 1 "Src/encoder.c"
   1:Src/encoder.c **** /*
   2:Src/encoder.c ****  * encoder.c
   3:Src/encoder.c ****  *
   4:Src/encoder.c ****  *  Created on: 13.03.2016
   5:Src/encoder.c ****  *      Author: Spritkopf
   6:Src/encoder.c ****  */
   7:Src/encoder.c **** 
   8:Src/encoder.c **** #include "stm32l1xx_hal.h"
   9:Src/encoder.c **** #include "encoder.h"
  10:Src/encoder.c **** 
  11:Src/encoder.c **** #define CH_A_HIGH	HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_11)==GPIO_PIN_SET
  12:Src/encoder.c **** #define CH_A_LOW	HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_11)==GPIO_PIN_RESET
  13:Src/encoder.c **** #define CH_B_HIGH	HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8)==GPIO_PIN_SET
  14:Src/encoder.c **** #define CH_B_LOW	HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8)==GPIO_PIN_RESET
  15:Src/encoder.c **** #define THRESHOLD	300
  16:Src/encoder.c **** 
  17:Src/encoder.c **** #define ENCODER_PIN_A	GPIO_PIN_6
  18:Src/encoder.c **** #define ENCODER_PIN_B	GPIO_PIN_7
  19:Src/encoder.c **** #define ENCODER_PORT	GPIOB
  20:Src/encoder.c **** 
  21:Src/encoder.c **** 
  22:Src/encoder.c **** /* Timer handler declaration */
  23:Src/encoder.c **** TIM_HandleTypeDef    encoder_handle;
  24:Src/encoder.c **** 
  25:Src/encoder.c **** 
  26:Src/encoder.c **** static uint32_t encoder_get_direction();
  27:Src/encoder.c **** 
  28:Src/encoder.c **** /* function pointer for callback functions */
  29:Src/encoder.c **** void (*encoder_rotation_callback)(uint8_t direction);
  30:Src/encoder.c **** void (*encoder_button_callback)(void);
  31:Src/encoder.c **** 
  32:Src/encoder.c **** void TIM4_IRQHandler(void)
  33:Src/encoder.c **** {
  34:Src/encoder.c **** 	uint8_t temp_direction;
ARM GAS  /tmp/ccAVLa3j.s 			page 2


  35:Src/encoder.c **** 
  36:Src/encoder.c **** 	HAL_TIM_IRQHandler(&encoder_handle);
  37:Src/encoder.c **** 
  38:Src/encoder.c **** 	temp_direction = encoder_get_direction();
  39:Src/encoder.c **** 	encoder_rotation_callback(temp_direction);
  40:Src/encoder.c **** 
  41:Src/encoder.c **** 	/* Wait a short delay before clearing Interrupt flags to avoid
  42:Src/encoder.c **** 	 * immediately following interrupts due to bouncing issues
  43:Src/encoder.c **** 	 *  todo: remove this, we have hardware debouncing */
  44:Src/encoder.c **** 	//delay = 0xfff0;
  45:Src/encoder.c **** 	//while(delay--);
  46:Src/encoder.c **** 
  47:Src/encoder.c **** 
  48:Src/encoder.c **** }
  49:Src/encoder.c **** 
  50:Src/encoder.c **** 
  51:Src/encoder.c **** void encoder_init()
  52:Src/encoder.c **** {
  53:Src/encoder.c **** 	GPIO_InitTypeDef   gpio;
  54:Src/encoder.c **** 	TIM_Encoder_InitTypeDef encoder_config;
  55:Src/encoder.c **** 
  56:Src/encoder.c **** 	/* Encoder Pins
  57:Src/encoder.c **** 	 *
  58:Src/encoder.c **** 	 * A: PA8
  59:Src/encoder.c **** 	 * B: PE11
  60:Src/encoder.c **** 	 * Button: PA6
  61:Src/encoder.c **** 	 */
  62:Src/encoder.c **** 
  63:Src/encoder.c **** 
  64:Src/encoder.c **** 	/* Enable GPIO Channels Clock */
  65:Src/encoder.c **** 	__HAL_RCC_GPIOA_CLK_ENABLE();
  66:Src/encoder.c **** 	__HAL_RCC_GPIOB_CLK_ENABLE();
  67:Src/encoder.c **** 	__HAL_RCC_TIM4_CLK_ENABLE();
  68:Src/encoder.c **** 
  69:Src/encoder.c **** 	HAL_NVIC_SetPriority(TIM4_IRQn, 0, 1);
  70:Src/encoder.c **** 	HAL_NVIC_EnableIRQ(TIM4_IRQn);
  71:Src/encoder.c **** 
  72:Src/encoder.c **** 
  73:Src/encoder.c **** 	/*##-2- Configure I/Os #####################################################*/
  74:Src/encoder.c **** 	/* Common configuration for all channels */
  75:Src/encoder.c **** 	gpio.Pin = ENCODER_PIN_A | ENCODER_PIN_B;
  76:Src/encoder.c **** 	gpio.Mode = GPIO_MODE_AF_PP;
  77:Src/encoder.c **** 	gpio.Pull = GPIO_NOPULL;
  78:Src/encoder.c **** 	gpio.Speed = GPIO_SPEED_HIGH;
  79:Src/encoder.c **** 	gpio.Alternate = GPIO_AF2_TIM4;
  80:Src/encoder.c **** 
  81:Src/encoder.c **** 	/* Channel 2 configuration */
  82:Src/encoder.c **** 	HAL_GPIO_Init(ENCODER_PORT, &gpio);
  83:Src/encoder.c **** #if 0
  84:Src/encoder.c **** 	/* Push Button Initialization */
  85:Src/encoder.c **** 	GPIO_InitStruct.Pin = GPIO_PIN_8;
  86:Src/encoder.c **** 	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  87:Src/encoder.c **** 	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  88:Src/encoder.c **** 	GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
  89:Src/encoder.c **** 	HAL_GPIO_Init(ENCODER_PORT, &GPIO_InitStruct);
  90:Src/encoder.c **** 
  91:Src/encoder.c **** 	HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 2);
ARM GAS  /tmp/ccAVLa3j.s 			page 3


  92:Src/encoder.c **** 	HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
  93:Src/encoder.c **** #endif
  94:Src/encoder.c **** 
  95:Src/encoder.c **** 	encoder_handle.Instance = TIM4;
  96:Src/encoder.c **** 	encoder_handle.Init.Period = 0xFFFF;
  97:Src/encoder.c **** 	encoder_handle.Init.Prescaler = 0;
  98:Src/encoder.c **** 	encoder_handle.Init.ClockDivision = 0;
  99:Src/encoder.c **** 	encoder_handle.Init.CounterMode = TIM_COUNTERMODE_UP;
 100:Src/encoder.c **** 
 101:Src/encoder.c **** 	encoder_config.EncoderMode = TIM_ENCODERMODE_TI2;
 102:Src/encoder.c **** 	encoder_config.IC1Polarity = TIM_ICPOLARITY_FALLING;
 103:Src/encoder.c **** 	encoder_config.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 104:Src/encoder.c **** 	encoder_config.IC1Prescaler = TIM_ICPSC_DIV1;
 105:Src/encoder.c **** 	encoder_config.IC1Filter = 0x0F;
 106:Src/encoder.c **** 
 107:Src/encoder.c **** 	encoder_config.IC2Polarity = TIM_ICPOLARITY_BOTHEDGE;
 108:Src/encoder.c **** 	encoder_config.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 109:Src/encoder.c **** 	encoder_config.IC2Prescaler = TIM_ICPSC_DIV1;
 110:Src/encoder.c **** 	encoder_config.IC2Filter = 0x0F;
 111:Src/encoder.c **** 
 112:Src/encoder.c **** 	HAL_TIM_Encoder_Init(&encoder_handle, &encoder_config);
 113:Src/encoder.c **** 
 114:Src/encoder.c **** 
 115:Src/encoder.c **** 
 116:Src/encoder.c **** 
 117:Src/encoder.c **** }
 118:Src/encoder.c **** 
 119:Src/encoder.c **** void encoder_start(void)
 120:Src/encoder.c **** {
 121:Src/encoder.c **** 	/* Start the encoder interface */
 122:Src/encoder.c **** 	HAL_TIM_Encoder_Start_IT(&encoder_handle, TIM_CHANNEL_1);
 123:Src/encoder.c **** }
 124:Src/encoder.c **** 
 125:Src/encoder.c **** void encoder_stop(void)
 126:Src/encoder.c **** {
 127:Src/encoder.c **** 	HAL_TIM_Encoder_Stop_IT(&encoder_handle, TIM_CHANNEL_1);
 128:Src/encoder.c **** }
 129:Src/encoder.c **** 
 130:Src/encoder.c **** uint32_t encoder_get_direction(void)
 131:Src/encoder.c **** {
  25              		.loc 1 131 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
 132:Src/encoder.c **** 	return (__HAL_TIM_IS_TIM_COUNTING_DOWN(&encoder_handle));
  30              		.loc 1 132 0
  31 0000 024B     		ldr	r3, .L2
  32 0002 1B68     		ldr	r3, [r3]
  33 0004 1868     		ldr	r0, [r3]
 133:Src/encoder.c **** }
  34              		.loc 1 133 0
  35 0006 C0F30010 		ubfx	r0, r0, #4, #1
  36 000a 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
ARM GAS  /tmp/ccAVLa3j.s 			page 4


  40 000c 00000000 		.word	encoder_handle
  41              		.cfi_endproc
  42              	.LFE68:
  44              		.section	.text.TIM4_IRQHandler,"ax",%progbits
  45              		.align	1
  46              		.global	TIM4_IRQHandler
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu softvfp
  52              	TIM4_IRQHandler:
  53              	.LFB64:
  33:Src/encoder.c **** 	uint8_t temp_direction;
  54              		.loc 1 33 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58 0000 08B5     		push	{r3, lr}
  59              	.LCFI0:
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 3, -8
  62              		.cfi_offset 14, -4
  36:Src/encoder.c **** 
  63              		.loc 1 36 0
  64 0002 0548     		ldr	r0, .L6
  65 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
  66              	.LVL0:
  38:Src/encoder.c **** 	encoder_rotation_callback(temp_direction);
  67              		.loc 1 38 0
  68 0008 FFF7FEFF 		bl	encoder_get_direction
  69              	.LVL1:
  39:Src/encoder.c **** 
  70              		.loc 1 39 0
  71 000c 034B     		ldr	r3, .L6+4
  72 000e 1B68     		ldr	r3, [r3]
  73 0010 C0B2     		uxtb	r0, r0
  74 0012 9847     		blx	r3
  75              	.LVL2:
  76 0014 08BD     		pop	{r3, pc}
  77              	.L7:
  78 0016 00BF     		.align	2
  79              	.L6:
  80 0018 00000000 		.word	encoder_handle
  81 001c 00000000 		.word	encoder_rotation_callback
  82              		.cfi_endproc
  83              	.LFE64:
  85              		.section	.text.encoder_init,"ax",%progbits
  86              		.align	1
  87              		.global	encoder_init
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu softvfp
  93              	encoder_init:
  94              	.LFB65:
  52:Src/encoder.c **** 	GPIO_InitTypeDef   gpio;
  95              		.loc 1 52 0
ARM GAS  /tmp/ccAVLa3j.s 			page 5


  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 72
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99 0000 30B5     		push	{r4, r5, lr}
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 12
 102              		.cfi_offset 4, -12
 103              		.cfi_offset 5, -8
 104              		.cfi_offset 14, -4
 105 0002 93B0     		sub	sp, sp, #76
 106              	.LCFI2:
 107              		.cfi_def_cfa_offset 88
 108              	.LBB2:
  65:Src/encoder.c **** 	__HAL_RCC_GPIOB_CLK_ENABLE();
 109              		.loc 1 65 0
 110 0004 254B     		ldr	r3, .L10
 111 0006 DA69     		ldr	r2, [r3, #28]
 112 0008 42F00102 		orr	r2, r2, #1
 113 000c DA61     		str	r2, [r3, #28]
 114 000e DA69     		ldr	r2, [r3, #28]
 115 0010 02F00102 		and	r2, r2, #1
 116 0014 0192     		str	r2, [sp, #4]
 117 0016 019A     		ldr	r2, [sp, #4]
 118              	.LBE2:
 119              	.LBB3:
  66:Src/encoder.c **** 	__HAL_RCC_TIM4_CLK_ENABLE();
 120              		.loc 1 66 0
 121 0018 DA69     		ldr	r2, [r3, #28]
 122 001a 42F00202 		orr	r2, r2, #2
 123 001e DA61     		str	r2, [r3, #28]
 124 0020 DA69     		ldr	r2, [r3, #28]
 125 0022 02F00202 		and	r2, r2, #2
 126 0026 0292     		str	r2, [sp, #8]
 127 0028 029A     		ldr	r2, [sp, #8]
 128              	.LBE3:
 129              	.LBB4:
  67:Src/encoder.c **** 
 130              		.loc 1 67 0
 131 002a 5A6A     		ldr	r2, [r3, #36]
 132 002c 42F00402 		orr	r2, r2, #4
 133 0030 5A62     		str	r2, [r3, #36]
 134 0032 5B6A     		ldr	r3, [r3, #36]
 135 0034 03F00403 		and	r3, r3, #4
 136 0038 0393     		str	r3, [sp, #12]
 137 003a 039B     		ldr	r3, [sp, #12]
 138              	.LBE4:
  69:Src/encoder.c **** 	HAL_NVIC_EnableIRQ(TIM4_IRQn);
 139              		.loc 1 69 0
 140 003c 0122     		movs	r2, #1
 141 003e 0021     		movs	r1, #0
 142 0040 1E20     		movs	r0, #30
 143 0042 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 144              	.LVL3:
  70:Src/encoder.c **** 
 145              		.loc 1 70 0
 146 0046 1E20     		movs	r0, #30
 147 0048 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  /tmp/ccAVLa3j.s 			page 6


 148              	.LVL4:
  75:Src/encoder.c **** 	gpio.Mode = GPIO_MODE_AF_PP;
 149              		.loc 1 75 0
 150 004c C023     		movs	r3, #192
 151 004e 0D93     		str	r3, [sp, #52]
  76:Src/encoder.c **** 	gpio.Pull = GPIO_NOPULL;
 152              		.loc 1 76 0
 153 0050 0225     		movs	r5, #2
 154 0052 0E95     		str	r5, [sp, #56]
  77:Src/encoder.c **** 	gpio.Speed = GPIO_SPEED_HIGH;
 155              		.loc 1 77 0
 156 0054 0024     		movs	r4, #0
 157 0056 0F94     		str	r4, [sp, #60]
  78:Src/encoder.c **** 	gpio.Alternate = GPIO_AF2_TIM4;
 158              		.loc 1 78 0
 159 0058 0323     		movs	r3, #3
 160 005a 1093     		str	r3, [sp, #64]
  79:Src/encoder.c **** 
 161              		.loc 1 79 0
 162 005c 1195     		str	r5, [sp, #68]
  82:Src/encoder.c **** #if 0
 163              		.loc 1 82 0
 164 005e 0DA9     		add	r1, sp, #52
 165 0060 0F48     		ldr	r0, .L10+4
 166 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 167              	.LVL5:
  95:Src/encoder.c **** 	encoder_handle.Init.Period = 0xFFFF;
 168              		.loc 1 95 0
 169 0066 0F48     		ldr	r0, .L10+8
 170 0068 0F4B     		ldr	r3, .L10+12
 171 006a 0360     		str	r3, [r0]
  96:Src/encoder.c **** 	encoder_handle.Init.Prescaler = 0;
 172              		.loc 1 96 0
 173 006c 4FF6FF73 		movw	r3, #65535
 174 0070 C360     		str	r3, [r0, #12]
  97:Src/encoder.c **** 	encoder_handle.Init.ClockDivision = 0;
 175              		.loc 1 97 0
 176 0072 4460     		str	r4, [r0, #4]
  98:Src/encoder.c **** 	encoder_handle.Init.CounterMode = TIM_COUNTERMODE_UP;
 177              		.loc 1 98 0
 178 0074 0461     		str	r4, [r0, #16]
  99:Src/encoder.c **** 
 179              		.loc 1 99 0
 180 0076 8460     		str	r4, [r0, #8]
 101:Src/encoder.c **** 	encoder_config.IC1Polarity = TIM_ICPOLARITY_FALLING;
 181              		.loc 1 101 0
 182 0078 0495     		str	r5, [sp, #16]
 102:Src/encoder.c **** 	encoder_config.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 183              		.loc 1 102 0
 184 007a 0595     		str	r5, [sp, #20]
 103:Src/encoder.c **** 	encoder_config.IC1Prescaler = TIM_ICPSC_DIV1;
 185              		.loc 1 103 0
 186 007c 0122     		movs	r2, #1
 187 007e 0692     		str	r2, [sp, #24]
 104:Src/encoder.c **** 	encoder_config.IC1Filter = 0x0F;
 188              		.loc 1 104 0
 189 0080 0794     		str	r4, [sp, #28]
ARM GAS  /tmp/ccAVLa3j.s 			page 7


 105:Src/encoder.c **** 
 190              		.loc 1 105 0
 191 0082 0F23     		movs	r3, #15
 192 0084 0893     		str	r3, [sp, #32]
 107:Src/encoder.c **** 	encoder_config.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 193              		.loc 1 107 0
 194 0086 0A21     		movs	r1, #10
 195 0088 0991     		str	r1, [sp, #36]
 108:Src/encoder.c **** 	encoder_config.IC2Prescaler = TIM_ICPSC_DIV1;
 196              		.loc 1 108 0
 197 008a 0A92     		str	r2, [sp, #40]
 109:Src/encoder.c **** 	encoder_config.IC2Filter = 0x0F;
 198              		.loc 1 109 0
 199 008c 0B94     		str	r4, [sp, #44]
 110:Src/encoder.c **** 
 200              		.loc 1 110 0
 201 008e 0C93     		str	r3, [sp, #48]
 112:Src/encoder.c **** 
 202              		.loc 1 112 0
 203 0090 04A9     		add	r1, sp, #16
 204 0092 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 205              	.LVL6:
 117:Src/encoder.c **** 
 206              		.loc 1 117 0
 207 0096 13B0     		add	sp, sp, #76
 208              	.LCFI3:
 209              		.cfi_def_cfa_offset 12
 210              		@ sp needed
 211 0098 30BD     		pop	{r4, r5, pc}
 212              	.L11:
 213 009a 00BF     		.align	2
 214              	.L10:
 215 009c 00380240 		.word	1073887232
 216 00a0 00040240 		.word	1073873920
 217 00a4 00000000 		.word	encoder_handle
 218 00a8 00080040 		.word	1073743872
 219              		.cfi_endproc
 220              	.LFE65:
 222              		.section	.text.encoder_start,"ax",%progbits
 223              		.align	1
 224              		.global	encoder_start
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu softvfp
 230              	encoder_start:
 231              	.LFB66:
 120:Src/encoder.c **** 	/* Start the encoder interface */
 232              		.loc 1 120 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI4:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
ARM GAS  /tmp/ccAVLa3j.s 			page 8


 122:Src/encoder.c **** }
 241              		.loc 1 122 0
 242 0002 0021     		movs	r1, #0
 243 0004 0148     		ldr	r0, .L14
 244 0006 FFF7FEFF 		bl	HAL_TIM_Encoder_Start_IT
 245              	.LVL7:
 246 000a 08BD     		pop	{r3, pc}
 247              	.L15:
 248              		.align	2
 249              	.L14:
 250 000c 00000000 		.word	encoder_handle
 251              		.cfi_endproc
 252              	.LFE66:
 254              		.section	.text.encoder_stop,"ax",%progbits
 255              		.align	1
 256              		.global	encoder_stop
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu softvfp
 262              	encoder_stop:
 263              	.LFB67:
 126:Src/encoder.c **** 	HAL_TIM_Encoder_Stop_IT(&encoder_handle, TIM_CHANNEL_1);
 264              		.loc 1 126 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI5:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
 127:Src/encoder.c **** }
 273              		.loc 1 127 0
 274 0002 0021     		movs	r1, #0
 275 0004 0148     		ldr	r0, .L18
 276 0006 FFF7FEFF 		bl	HAL_TIM_Encoder_Stop_IT
 277              	.LVL8:
 278 000a 08BD     		pop	{r3, pc}
 279              	.L19:
 280              		.align	2
 281              	.L18:
 282 000c 00000000 		.word	encoder_handle
 283              		.cfi_endproc
 284              	.LFE67:
 286              		.section	.text.encoder_set_rotation_callback,"ax",%progbits
 287              		.align	1
 288              		.global	encoder_set_rotation_callback
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu softvfp
 294              	encoder_set_rotation_callback:
 295              	.LFB69:
 134:Src/encoder.c **** 
 135:Src/encoder.c **** void encoder_set_rotation_callback(void (*user_callback)(uint8_t direction))
 136:Src/encoder.c **** {
ARM GAS  /tmp/ccAVLa3j.s 			page 9


 296              		.loc 1 136 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 301              	.LVL9:
 137:Src/encoder.c **** 	encoder_rotation_callback = user_callback;
 302              		.loc 1 137 0
 303 0000 014B     		ldr	r3, .L21
 304 0002 1860     		str	r0, [r3]
 305 0004 7047     		bx	lr
 306              	.L22:
 307 0006 00BF     		.align	2
 308              	.L21:
 309 0008 00000000 		.word	encoder_rotation_callback
 310              		.cfi_endproc
 311              	.LFE69:
 313              		.section	.text.encoder_set_button_callback,"ax",%progbits
 314              		.align	1
 315              		.global	encoder_set_button_callback
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu softvfp
 321              	encoder_set_button_callback:
 322              	.LFB70:
 138:Src/encoder.c **** }
 139:Src/encoder.c **** 
 140:Src/encoder.c **** void encoder_set_button_callback(void (*user_callback)(void))
 141:Src/encoder.c **** {
 323              		.loc 1 141 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LVL10:
 142:Src/encoder.c **** 	encoder_button_callback = user_callback;
 329              		.loc 1 142 0
 330 0000 014B     		ldr	r3, .L24
 331 0002 1860     		str	r0, [r3]
 332 0004 7047     		bx	lr
 333              	.L25:
 334 0006 00BF     		.align	2
 335              	.L24:
 336 0008 00000000 		.word	encoder_button_callback
 337              		.cfi_endproc
 338              	.LFE70:
 340              		.comm	encoder_button_callback,4,4
 341              		.comm	encoder_rotation_callback,4,4
 342              		.comm	encoder_handle,56,4
 343              		.text
 344              	.Letext0:
 345              		.file 2 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/machine/_defau
 346              		.file 3 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_stdint.h"
 347              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 348              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/system_stm32l1xx.h"
 349              		.file 6 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l151xb.h"
ARM GAS  /tmp/ccAVLa3j.s 			page 10


 350              		.file 7 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/lock.h"
 351              		.file 8 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_types.h"
 352              		.file 9 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/lib/gcc/arm-none-eabi/6.3.1/include/
 353              		.file 10 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/reent.h"
 354              		.file 11 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 355              		.file 12 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_gpio.h"
 356              		.file 13 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_dma.h"
 357              		.file 14 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_tim.h"
 358              		.file 15 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_cortex.h"
ARM GAS  /tmp/ccAVLa3j.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 encoder.c
     /tmp/ccAVLa3j.s:16     .text.encoder_get_direction:0000000000000000 $t
     /tmp/ccAVLa3j.s:22     .text.encoder_get_direction:0000000000000000 encoder_get_direction
     /tmp/ccAVLa3j.s:40     .text.encoder_get_direction:000000000000000c $d
                            *COM*:0000000000000038 encoder_handle
     /tmp/ccAVLa3j.s:45     .text.TIM4_IRQHandler:0000000000000000 $t
     /tmp/ccAVLa3j.s:52     .text.TIM4_IRQHandler:0000000000000000 TIM4_IRQHandler
     /tmp/ccAVLa3j.s:80     .text.TIM4_IRQHandler:0000000000000018 $d
                            *COM*:0000000000000004 encoder_rotation_callback
     /tmp/ccAVLa3j.s:86     .text.encoder_init:0000000000000000 $t
     /tmp/ccAVLa3j.s:93     .text.encoder_init:0000000000000000 encoder_init
     /tmp/ccAVLa3j.s:215    .text.encoder_init:000000000000009c $d
     /tmp/ccAVLa3j.s:223    .text.encoder_start:0000000000000000 $t
     /tmp/ccAVLa3j.s:230    .text.encoder_start:0000000000000000 encoder_start
     /tmp/ccAVLa3j.s:250    .text.encoder_start:000000000000000c $d
     /tmp/ccAVLa3j.s:255    .text.encoder_stop:0000000000000000 $t
     /tmp/ccAVLa3j.s:262    .text.encoder_stop:0000000000000000 encoder_stop
     /tmp/ccAVLa3j.s:282    .text.encoder_stop:000000000000000c $d
     /tmp/ccAVLa3j.s:287    .text.encoder_set_rotation_callback:0000000000000000 $t
     /tmp/ccAVLa3j.s:294    .text.encoder_set_rotation_callback:0000000000000000 encoder_set_rotation_callback
     /tmp/ccAVLa3j.s:309    .text.encoder_set_rotation_callback:0000000000000008 $d
     /tmp/ccAVLa3j.s:314    .text.encoder_set_button_callback:0000000000000000 $t
     /tmp/ccAVLa3j.s:321    .text.encoder_set_button_callback:0000000000000000 encoder_set_button_callback
     /tmp/ccAVLa3j.s:336    .text.encoder_set_button_callback:0000000000000008 $d
                            *COM*:0000000000000004 encoder_button_callback
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_IRQHandler
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
HAL_TIM_Encoder_Init
HAL_TIM_Encoder_Start_IT
HAL_TIM_Encoder_Stop_IT
