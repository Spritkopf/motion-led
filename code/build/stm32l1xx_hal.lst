ARM GAS  /tmp/ccwJrENL.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l1xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_MspInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB66:
  25              		.file 1 "Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c"
   1:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @file    stm32l1xx_hal.c
   4:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *
   8:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   @verbatim
   9:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ==============================================================================
  10:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ==============================================================================
  12:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     [..]
  13:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     [..]
  16:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     The HAL contains two APIs' categories: 
  17:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  20:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   @endverbatim
  21:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @attention
  23:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *
  24:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  25:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *
  26:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  32:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
ARM GAS  /tmp/ccwJrENL.s 			page 2


  34:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *      without specific prior written permission.
  36:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *
  37:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *
  48:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ******************************************************************************
  49:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  50:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  51:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #include "stm32l1xx_hal.h"
  53:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  54:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @addtogroup STM32L1xx_HAL_Driver
  55:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
  56:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  57:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  58:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL HAL
  59:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief HAL module driver.
  60:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
  61:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  62:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  63:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  64:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  65:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  66:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  67:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  68:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Private_Defines HAL Private Defines
  69:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
  70:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  71:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  72:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
  73:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  * @brief STM32L1xx HAL Driver version number
  74:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    */
  75:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  76:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION_SUB1   (0x03) /*!< [23:16] sub1 version */
  77:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION_SUB2   (0x01) /*!< [15:8]  sub2 version */
  78:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */
  79:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION         ((__STM32L1xx_HAL_VERSION_MAIN << 24)\
  80:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                                         |(__STM32L1xx_HAL_VERSION_SUB1 << 16)\
  81:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                                         |(__STM32L1xx_HAL_VERSION_SUB2 << 8 )\
  82:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                                         |(__STM32L1xx_HAL_VERSION_RC))
  83:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  84:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  85:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  86:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
  87:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @}
  88:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  89:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  90:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /tmp/ccwJrENL.s 			page 3


  91:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  92:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  93:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  94:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
  95:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  96:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  97:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __IO uint32_t uwTick;
  98:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  99:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @}
 101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private functions ---------------------------------------------------------*/
 105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
 108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *
 113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @verbatim
 114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****               ##### Initialization and de-initialization functions #####
 116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    [..]  This section provides functions allowing to:
 118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****           configuration. It initializes the source of time base also when timeout 
 120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****           is needed and the backup domain when enabled.
 121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) de-Initializes common part of the HAL.
 122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****           Tick interrupt priority. 
 124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              handled in milliseconds basis.
 129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****             ISR process will be blocked. 
 137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  
 140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @endverbatim
 141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
 142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function configures the Flash prefetch, 
 146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
 147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is called at the beginning of program after reset and before 
ARM GAS  /tmp/ccwJrENL.s 			page 4


 148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       the clock configuration
 149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note The time base configuration is based on MSI clock when exiting from Reset.
 150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       Once done, time base tick start incrementing.
 151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        In the default implementation,Systick is used as source of time base.
 152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        the tick variable is incremented each 1ms in its ISR.
 153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval HAL status
 154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Configure Flash prefetch */
 158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #endif /* PREFETCH_ENABLE */
 161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Set Interrupt Group Priority */
 163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is MSI) */
 166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Init the low level hardware */
 169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_MspInit();
 170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Return function status */
 172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return HAL_OK;
 173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the source
 177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        of time base.
 178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is optional.
 179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval HAL status
 180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Reset of all peripherals */
 184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* De-Init the low level hardware */
 194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_MspDeInit();
 195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     
 196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Return function status */
 197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return HAL_OK;
 198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Initializes the MSP.
 202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_MspInit(void)
ARM GAS  /tmp/ccwJrENL.s 			page 5


 205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
  26              		.loc 1 205 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 7047     		bx	lr
  32              		.cfi_endproc
  33              	.LFE66:
  35              		.section	.text.HAL_MspDeInit,"ax",%progbits
  36              		.align	1
  37              		.weak	HAL_MspDeInit
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu softvfp
  43              	HAL_MspDeInit:
  44              	.LFB67:
 206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    */
 209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  DeInitializes the MSP.
 213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_MspDeInit(void)
 216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
  45              		.loc 1 216 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50 0000 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE67:
  54              		.section	.text.HAL_DeInit,"ax",%progbits
  55              		.align	1
  56              		.global	HAL_DeInit
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	HAL_DeInit:
  63              	.LFB65:
 182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Reset of all peripherals */
  64              		.loc 1 182 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
 182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Reset of all peripherals */
  68              		.loc 1 182 0
  69 0000 10B5     		push	{r4, lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
ARM GAS  /tmp/ccwJrENL.s 			page 6


  73              		.cfi_offset 14, -4
 184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  74              		.loc 1 184 0
  75 0002 074B     		ldr	r3, .L5
  76 0004 4FF0FF32 		mov	r2, #-1
  77 0008 9A61     		str	r2, [r3, #24]
 185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  78              		.loc 1 185 0
  79 000a 0024     		movs	r4, #0
  80 000c 9C61     		str	r4, [r3, #24]
 187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  81              		.loc 1 187 0
  82 000e 5A61     		str	r2, [r3, #20]
 188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  83              		.loc 1 188 0
  84 0010 5C61     		str	r4, [r3, #20]
 190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  85              		.loc 1 190 0
  86 0012 1A61     		str	r2, [r3, #16]
 191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  87              		.loc 1 191 0
  88 0014 1C61     		str	r4, [r3, #16]
 194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     
  89              		.loc 1 194 0
  90 0016 FFF7FEFF 		bl	HAL_MspDeInit
  91              	.LVL0:
 198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  92              		.loc 1 198 0
  93 001a 2046     		mov	r0, r4
  94 001c 10BD     		pop	{r4, pc}
  95              	.L6:
  96 001e 00BF     		.align	2
  97              	.L5:
  98 0020 00380240 		.word	1073887232
  99              		.cfi_endproc
 100              	.LFE65:
 102              		.section	.text.HAL_InitTick,"ax",%progbits
 103              		.align	1
 104              		.weak	HAL_InitTick
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu softvfp
 110              	HAL_InitTick:
 111              	.LFB68:
 217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    */
 220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function configures the source of the time base. 
 224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        Tick interrupt priority.
 226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
ARM GAS  /tmp/ccwJrENL.s 			page 7


 229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       The function is declared as __Weak  to be overwritten  in case of other
 234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementation  in user file.
 235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval HAL status
 237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 112              		.loc 1 239 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              	.LVL1:
 117 0000 10B5     		push	{r4, lr}
 118              	.LCFI1:
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 4, -8
 121              		.cfi_offset 14, -4
 122 0002 0446     		mov	r4, r0
 240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_SYSTICK_Config(SystemCoreClock /1000);
 123              		.loc 1 241 0
 124 0004 074B     		ldr	r3, .L9
 125 0006 1868     		ldr	r0, [r3]
 126              	.LVL2:
 127 0008 074B     		ldr	r3, .L9+4
 128 000a A3FB0030 		umull	r3, r0, r3, r0
 129 000e 8009     		lsrs	r0, r0, #6
 130 0010 FFF7FEFF 		bl	HAL_SYSTICK_Config
 131              	.LVL3:
 242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /*Configure the SysTick IRQ priority */
 244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0);
 132              		.loc 1 244 0
 133 0014 0022     		movs	r2, #0
 134 0016 2146     		mov	r1, r4
 135 0018 4FF0FF30 		mov	r0, #-1
 136 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL4:
 245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    /* Return function status */
 247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return HAL_OK;
 248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 138              		.loc 1 248 0
 139 0020 0020     		movs	r0, #0
 140 0022 10BD     		pop	{r4, pc}
 141              	.LVL5:
 142              	.L10:
 143              		.align	2
 144              	.L9:
 145 0024 00000000 		.word	SystemCoreClock
 146 0028 D34D6210 		.word	274877907
 147              		.cfi_endproc
 148              	.LFE68:
ARM GAS  /tmp/ccwJrENL.s 			page 8


 150              		.section	.text.HAL_Init,"ax",%progbits
 151              		.align	1
 152              		.global	HAL_Init
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 156              		.fpu softvfp
 158              	HAL_Init:
 159              	.LFB64:
 156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Configure Flash prefetch */
 160              		.loc 1 156 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164 0000 08B5     		push	{r3, lr}
 165              	.LCFI2:
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 3, -8
 168              		.cfi_offset 14, -4
 163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 169              		.loc 1 163 0
 170 0002 0320     		movs	r0, #3
 171 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 172              	.LVL6:
 166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 173              		.loc 1 166 0
 174 0008 0020     		movs	r0, #0
 175 000a FFF7FEFF 		bl	HAL_InitTick
 176              	.LVL7:
 169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 177              		.loc 1 169 0
 178 000e FFF7FEFF 		bl	HAL_MspInit
 179              	.LVL8:
 173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 180              		.loc 1 173 0
 181 0012 0020     		movs	r0, #0
 182 0014 08BD     		pop	{r3, pc}
 183              		.cfi_endproc
 184              	.LFE64:
 186              		.section	.text.HAL_IncTick,"ax",%progbits
 187              		.align	1
 188              		.weak	HAL_IncTick
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 192              		.fpu softvfp
 194              	HAL_IncTick:
 195              	.LFB69:
 249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @}
 252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *  @brief    HAL Control functions
 256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *
 257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @verbatim
ARM GAS  /tmp/ccwJrENL.s 			page 9


 258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                       ##### HAL Control functions #####
 260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     [..]  This section provides functions allowing to:
 262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Provide a tick value in millisecond
 263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Provide a blocking delay in millisecond
 264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Suspend the time base source interrupt
 265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Resume the time base source interrupt
 266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Get the HAL API driver version
 267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Get the device identifier
 268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Get the device revision identifier
 269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       
 273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @endverbatim
 274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
 275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        used as application time base.
 280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       in Systick ISR.
 282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *      implementations in user file.
 284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_IncTick(void)
 287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 196              		.loc 1 287 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   uwTick++;
 201              		.loc 1 288 0
 202 0000 024A     		ldr	r2, .L14
 203 0002 1368     		ldr	r3, [r2]
 204 0004 0133     		adds	r3, r3, #1
 205 0006 1360     		str	r3, [r2]
 206 0008 7047     		bx	lr
 207              	.L15:
 208 000a 00BF     		.align	2
 209              	.L14:
 210 000c 00000000 		.word	uwTick
 211              		.cfi_endproc
 212              	.LFE69:
 214              		.section	.text.HAL_GetTick,"ax",%progbits
 215              		.align	1
 216              		.weak	HAL_GetTick
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu softvfp
 222              	HAL_GetTick:
 223              	.LFB70:
ARM GAS  /tmp/ccwJrENL.s 			page 10


 289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Provides a tick value in millisecond.
 293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementations in user file.
 295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval tick value
 296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 224              		.loc 1 298 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return uwTick;
 229              		.loc 1 299 0
 230 0000 014B     		ldr	r3, .L17
 231 0002 1868     		ldr	r0, [r3]
 300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 232              		.loc 1 300 0
 233 0004 7047     		bx	lr
 234              	.L18:
 235 0006 00BF     		.align	2
 236              	.L17:
 237 0008 00000000 		.word	uwTick
 238              		.cfi_endproc
 239              	.LFE70:
 241              		.section	.text.HAL_Delay,"ax",%progbits
 242              		.align	1
 243              		.weak	HAL_Delay
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu softvfp
 249              	HAL_Delay:
 250              	.LFB71:
 301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function provides accurate delay (in milliseconds) based 
 304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        on variable incremented.
 305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is incremented.
 308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note ThiS function is declared as __weak to be overwritten in case of other
 309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementations in user file.
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @param Delay: specifies the delay time length, in milliseconds.
 311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 251              		.loc 1 314 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              	.LVL9:
 256 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccwJrENL.s 			page 11


 257              	.LCFI3:
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 4, -8
 260              		.cfi_offset 14, -4
 261 0002 82B0     		sub	sp, sp, #8
 262              	.LCFI4:
 263              		.cfi_def_cfa_offset 16
 264 0004 0190     		str	r0, [sp, #4]
 265              	.LVL10:
 315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   uint32_t tickstart = 0;
 316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   tickstart = HAL_GetTick();
 266              		.loc 1 316 0
 267 0006 FFF7FEFF 		bl	HAL_GetTick
 268              	.LVL11:
 269 000a 0446     		mov	r4, r0
 270              	.LVL12:
 271              	.L20:
 317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   while((HAL_GetTick() - tickstart) < Delay)
 272              		.loc 1 317 0 discriminator 1
 273 000c FFF7FEFF 		bl	HAL_GetTick
 274              	.LVL13:
 275 0010 001B     		subs	r0, r0, r4
 276 0012 019B     		ldr	r3, [sp, #4]
 277 0014 9842     		cmp	r0, r3
 278 0016 F9D3     		bcc	.L20
 318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 279              		.loc 1 320 0
 280 0018 02B0     		add	sp, sp, #8
 281              	.LCFI5:
 282              		.cfi_def_cfa_offset 8
 283              		@ sp needed
 284 001a 10BD     		pop	{r4, pc}
 285              		.cfi_endproc
 286              	.LFE71:
 288              		.section	.text.HAL_SuspendTick,"ax",%progbits
 289              		.align	1
 290              		.weak	HAL_SuspendTick
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu softvfp
 296              	HAL_SuspendTick:
 297              	.LFB72:
 321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Suspend Tick increment.
 324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment 
 327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is suspended.
 328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementations in user file.
 330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_SuspendTick(void)
ARM GAS  /tmp/ccwJrENL.s 			page 12


 333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 298              		.loc 1 333 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Disable SysTick Interrupt */
 335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 303              		.loc 1 335 0
 304 0000 024A     		ldr	r2, .L23
 305 0002 1368     		ldr	r3, [r2]
 306 0004 23F00203 		bic	r3, r3, #2
 307 0008 1360     		str	r3, [r2]
 308 000a 7047     		bx	lr
 309              	.L24:
 310              		.align	2
 311              	.L23:
 312 000c 10E000E0 		.word	-536813552
 313              		.cfi_endproc
 314              	.LFE72:
 316              		.section	.text.HAL_ResumeTick,"ax",%progbits
 317              		.align	1
 318              		.weak	HAL_ResumeTick
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 322              		.fpu softvfp
 324              	HAL_ResumeTick:
 325              	.LFB73:
 336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Resume Tick increment.
 340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment 
 343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is resumed.
 344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementations in user file.
 346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_ResumeTick(void)
 349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 326              		.loc 1 349 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Enable SysTick Interrupt */
 351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 331              		.loc 1 351 0
 332 0000 024A     		ldr	r2, .L26
 333 0002 1368     		ldr	r3, [r2]
 334 0004 43F00203 		orr	r3, r3, #2
 335 0008 1360     		str	r3, [r2]
 336 000a 7047     		bx	lr
 337              	.L27:
ARM GAS  /tmp/ccwJrENL.s 			page 13


 338              		.align	2
 339              	.L26:
 340 000c 10E000E0 		.word	-536813552
 341              		.cfi_endproc
 342              	.LFE73:
 344              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 345              		.align	1
 346              		.global	HAL_GetHalVersion
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 350              		.fpu softvfp
 352              	HAL_GetHalVersion:
 353              	.LFB74:
 352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Returns the HAL revision
 356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval version: 0xXYZR (8bits for each decimal, R for RC)
 357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 354              		.loc 1 359 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  return __STM32L1xx_HAL_VERSION;
 361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 359              		.loc 1 361 0
 360 0000 0048     		ldr	r0, .L29
 361 0002 7047     		bx	lr
 362              	.L30:
 363              		.align	2
 364              	.L29:
 365 0004 00010301 		.word	16974080
 366              		.cfi_endproc
 367              	.LFE74:
 369              		.section	.text.HAL_GetREVID,"ax",%progbits
 370              		.align	1
 371              		.global	HAL_GetREVID
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu softvfp
 377              	HAL_GetREVID:
 378              	.LFB75:
 362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Returns the device revision identifier.
 365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval Device revision identifier
 366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetREVID(void)
 368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 379              		.loc 1 368 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccwJrENL.s 			page 14


 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return((DBGMCU->IDCODE) >> 16);
 384              		.loc 1 369 0
 385 0000 014B     		ldr	r3, .L32
 386 0002 1868     		ldr	r0, [r3]
 370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 387              		.loc 1 370 0
 388 0004 000C     		lsrs	r0, r0, #16
 389 0006 7047     		bx	lr
 390              	.L33:
 391              		.align	2
 392              	.L32:
 393 0008 002004E0 		.word	-536600576
 394              		.cfi_endproc
 395              	.LFE75:
 397              		.section	.text.HAL_GetDEVID,"ax",%progbits
 398              		.align	1
 399              		.global	HAL_GetDEVID
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu softvfp
 405              	HAL_GetDEVID:
 406              	.LFB76:
 371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Returns the device identifier.
 374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval Device identifier
 375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 407              		.loc 1 377 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 412              		.loc 1 378 0
 413 0000 024B     		ldr	r3, .L35
 414 0002 1868     		ldr	r0, [r3]
 379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 415              		.loc 1 379 0
 416 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 417 0008 7047     		bx	lr
 418              	.L36:
 419 000a 00BF     		.align	2
 420              	.L35:
 421 000c 002004E0 		.word	-536600576
 422              		.cfi_endproc
 423              	.LFE76:
 425              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 426              		.align	1
 427              		.global	HAL_DBGMCU_EnableDBGSleepMode
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
ARM GAS  /tmp/ccwJrENL.s 			page 15


 431              		.fpu softvfp
 433              	HAL_DBGMCU_EnableDBGSleepMode:
 434              	.LFB77:
 380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 435              		.loc 1 386 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              		@ link register save eliminated.
 387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 440              		.loc 1 387 0
 441 0000 024A     		ldr	r2, .L38
 442 0002 5368     		ldr	r3, [r2, #4]
 443 0004 43F00103 		orr	r3, r3, #1
 444 0008 5360     		str	r3, [r2, #4]
 445 000a 7047     		bx	lr
 446              	.L39:
 447              		.align	2
 448              	.L38:
 449 000c 002004E0 		.word	-536600576
 450              		.cfi_endproc
 451              	.LFE77:
 453              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 454              		.align	1
 455              		.global	HAL_DBGMCU_DisableDBGSleepMode
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 459              		.fpu softvfp
 461              	HAL_DBGMCU_DisableDBGSleepMode:
 462              	.LFB78:
 388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 463              		.loc 1 395 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 468              		.loc 1 396 0
 469 0000 024A     		ldr	r2, .L41
 470 0002 5368     		ldr	r3, [r2, #4]
 471 0004 23F00103 		bic	r3, r3, #1
 472 0008 5360     		str	r3, [r2, #4]
 473 000a 7047     		bx	lr
ARM GAS  /tmp/ccwJrENL.s 			page 16


 474              	.L42:
 475              		.align	2
 476              	.L41:
 477 000c 002004E0 		.word	-536600576
 478              		.cfi_endproc
 479              	.LFE78:
 481              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 482              		.align	1
 483              		.global	HAL_DBGMCU_EnableDBGStopMode
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 487              		.fpu softvfp
 489              	HAL_DBGMCU_EnableDBGStopMode:
 490              	.LFB79:
 397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 491              		.loc 1 404 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		@ link register save eliminated.
 405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 496              		.loc 1 405 0
 497 0000 024A     		ldr	r2, .L44
 498 0002 5368     		ldr	r3, [r2, #4]
 499 0004 43F00203 		orr	r3, r3, #2
 500 0008 5360     		str	r3, [r2, #4]
 501 000a 7047     		bx	lr
 502              	.L45:
 503              		.align	2
 504              	.L44:
 505 000c 002004E0 		.word	-536600576
 506              		.cfi_endproc
 507              	.LFE79:
 509              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 510              		.align	1
 511              		.global	HAL_DBGMCU_DisableDBGStopMode
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 515              		.fpu softvfp
 517              	HAL_DBGMCU_DisableDBGStopMode:
 518              	.LFB80:
 406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
ARM GAS  /tmp/ccwJrENL.s 			page 17


 413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 519              		.loc 1 413 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 524              		.loc 1 414 0
 525 0000 024A     		ldr	r2, .L47
 526 0002 5368     		ldr	r3, [r2, #4]
 527 0004 23F00203 		bic	r3, r3, #2
 528 0008 5360     		str	r3, [r2, #4]
 529 000a 7047     		bx	lr
 530              	.L48:
 531              		.align	2
 532              	.L47:
 533 000c 002004E0 		.word	-536600576
 534              		.cfi_endproc
 535              	.LFE80:
 537              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 538              		.align	1
 539              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 540              		.syntax unified
 541              		.thumb
 542              		.thumb_func
 543              		.fpu softvfp
 545              	HAL_DBGMCU_EnableDBGStandbyMode:
 546              	.LFB81:
 415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 547              		.loc 1 422 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 552              		.loc 1 423 0
 553 0000 024A     		ldr	r2, .L50
 554 0002 5368     		ldr	r3, [r2, #4]
 555 0004 43F00403 		orr	r3, r3, #4
 556 0008 5360     		str	r3, [r2, #4]
 557 000a 7047     		bx	lr
 558              	.L51:
 559              		.align	2
 560              	.L50:
 561 000c 002004E0 		.word	-536600576
 562              		.cfi_endproc
 563              	.LFE81:
 565              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 566              		.align	1
 567              		.global	HAL_DBGMCU_DisableDBGStandbyMode
ARM GAS  /tmp/ccwJrENL.s 			page 18


 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 571              		.fpu softvfp
 573              	HAL_DBGMCU_DisableDBGStandbyMode:
 574              	.LFB82:
 424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 575              		.loc 1 431 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 580              		.loc 1 432 0
 581 0000 024A     		ldr	r2, .L53
 582 0002 5368     		ldr	r3, [r2, #4]
 583 0004 23F00403 		bic	r3, r3, #4
 584 0008 5360     		str	r3, [r2, #4]
 585 000a 7047     		bx	lr
 586              	.L54:
 587              		.align	2
 588              	.L53:
 589 000c 002004E0 		.word	-536600576
 590              		.cfi_endproc
 591              	.LFE82:
 593              		.comm	uwTick,4,4
 594              		.text
 595              	.Letext0:
 596              		.file 2 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/machine/_defau
 597              		.file 3 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_stdint.h"
 598              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 599              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/system_stm32l1xx.h"
 600              		.file 6 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l151xb.h"
 601              		.file 7 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/lock.h"
 602              		.file 8 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_types.h"
 603              		.file 9 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/lib/gcc/arm-none-eabi/6.3.1/include/
 604              		.file 10 "/home/ricardo/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/reent.h"
 605              		.file 11 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 606              		.file 12 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_cortex.h"
ARM GAS  /tmp/ccwJrENL.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l1xx_hal.c
     /tmp/ccwJrENL.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccwJrENL.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccwJrENL.s:36     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccwJrENL.s:43     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccwJrENL.s:55     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccwJrENL.s:62     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccwJrENL.s:98     .text.HAL_DeInit:0000000000000020 $d
     /tmp/ccwJrENL.s:103    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccwJrENL.s:110    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccwJrENL.s:145    .text.HAL_InitTick:0000000000000024 $d
     /tmp/ccwJrENL.s:151    .text.HAL_Init:0000000000000000 $t
     /tmp/ccwJrENL.s:158    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccwJrENL.s:187    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccwJrENL.s:194    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccwJrENL.s:210    .text.HAL_IncTick:000000000000000c $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccwJrENL.s:215    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccwJrENL.s:222    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccwJrENL.s:237    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccwJrENL.s:242    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccwJrENL.s:249    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccwJrENL.s:289    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccwJrENL.s:296    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccwJrENL.s:312    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccwJrENL.s:317    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccwJrENL.s:324    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccwJrENL.s:340    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccwJrENL.s:345    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccwJrENL.s:352    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccwJrENL.s:365    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccwJrENL.s:370    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccwJrENL.s:377    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccwJrENL.s:393    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccwJrENL.s:398    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccwJrENL.s:405    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccwJrENL.s:421    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccwJrENL.s:426    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccwJrENL.s:433    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccwJrENL.s:449    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccwJrENL.s:454    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccwJrENL.s:461    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccwJrENL.s:477    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccwJrENL.s:482    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccwJrENL.s:489    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccwJrENL.s:505    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccwJrENL.s:510    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccwJrENL.s:517    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccwJrENL.s:533    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccwJrENL.s:538    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccwJrENL.s:545    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccwJrENL.s:561    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccwJrENL.s:566    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccwJrENL.s:573    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccwJrENL.s:589    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
                     .debug_frame:0000000000000010 $d
ARM GAS  /tmp/ccwJrENL.s 			page 20



UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
